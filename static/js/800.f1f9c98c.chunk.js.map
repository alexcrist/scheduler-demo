{"version":3,"file":"static/js/800.f1f9c98c.chunk.js","mappings":"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","sources":["constants.js","util/date.js","scheduler/parsing/jobParser.js","scheduler/Schedule.js","scheduler/scoring/scorePeople.js","scheduler/scoring/scoreSchedule.js","scheduler/scoring/scoreCamp.js","scheduler/scheduler.js","scheduler/parsing/staffParser.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/node module decorator","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["export const STAFF_REQUIREMENT_TYPES = {\n  ALL_DAYS: 'ALL_DAYS'\n};\n\nexport const WORKER_MESSAGE_TYPES = {\n  NUM_CALCULATIONS: 'NUM_CALCULATIONS',\n  RESULT: 'RESULT'\n};\n\nexport const CAMP_SCORE_WEIGHT = 0.999;\nexport const PEOPLE_SCORE_WEIGHT = 0.001;\n\nexport const FAIRNESS_WEIGHT = 0.5;\nexport const AVG_HAPPINESS_WEIGHT = 0.5;","import moment from 'moment';\n\nexport const createDateRange = (startDate, endDate) => {\n  const range = [];\n  const current = moment(startDate);\n  const end = moment(endDate);\n  while (current <= end) {\n    range.push(current.format('YYYY-MM-DD'));\n    current.add(1, 'day');\n  }\n  return range;\n};\n\nconst dateDiffCache = {};\nexport const getDateDiff = (endDate, startDate) => {\n  const key = `${endDate} - ${startDate}`;\n  if (!(key in dateDiffCache)) {\n    const diff = moment(endDate).diff(moment(startDate), 'days');\n    dateDiffCache[key] = diff;\n  }\n  return dateDiffCache[key];\n};","import { STAFF_REQUIREMENT_TYPES } from '../../constants';\nimport { createDateRange } from '../../util/date';\n\nexport const parseJobs = (startDate, endDate, rawJobs) => {\n  const jobs = [];\n  for (let i = 0; i < rawJobs.length; i++) {\n    jobs.push({ ...rawJobs[i] });\n    jobs[i].dateRequirements = rawJobs[i].staffRequirements.map(makeDateRequirements(startDate, endDate));\n    jobs[i].dateRequirements = mergeDateRequirements(jobs[i].dateRequirements);\n  }\n  return jobs;\n};\n\nconst makeDateRequirements = (startDate, endDate) => (staffRequirement) => {\n  const { type, numStaff } = staffRequirement;\n  if (type === STAFF_REQUIREMENT_TYPES.ALL_DAYS) {\n    const dateRange = createDateRange(startDate, endDate);\n    return dateRange.map((date) => ({\n      date,\n      numStaff\n    }));\n  }\n};\n\nconst mergeDateRequirements = (dateRequirements) => {\n  // TODO\n  return dateRequirements[0];\n};","import { createDateRange } from '../util/date';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nexport class Schedule {\n\n  jobs = [];\n  staff = [];\n  staffBreaks = [];\n\n  numDaysOfCamp = 0;\n  dayBeforeFirstDay = null;\n  dayAfterLastDay = null;\n\n  dateToIndexMap = {};\n  jobIdMap = {};\n  personIdMap = {};\n  personToDaysOffMap = {};\n  numQualifiedOnDutyMap = {};\n\n  initEmptySchedule(startDate, endDate, jobs, staff) {\n    this.jobs = jobs;\n    this.staff = staff;\n\n    this.numDaysOfCamp = moment(endDate).diff(moment(startDate), 'days') + 1;\n    this.dayBeforeFirstDay = moment(startDate).subtract(1, 'day').format('YYYY-MM-DD');\n    this.dayAfterLastDay = moment(endDate).add(1, 'day').format('YYYY-MM-DD');\n    \n    this.staffBreaks = createDateRange(startDate, endDate).map((date) => ({\n      date,\n      staffOnBreak: []\n    }));\n\n    this.staffBreaks.forEach((day, index) => {\n      this.dateToIndexMap[day.date] = index;\n    });\n\n    this.jobs.forEach((job) => {\n      this.jobIdMap[job.id] = job;\n      this.numQualifiedOnDutyMap[job.id] = {};\n      job.dateRequirements.forEach((day) => {\n        this.numQualifiedOnDutyMap[job.id][day.date] = 0;\n      });\n    });\n\n    this.staff.forEach((person) => {\n      this.personIdMap[person.id] = person;\n      this.personToDaysOffMap[person.id] = [];\n      person.jobs.forEach((jobId) => {\n        Object.keys(this.numQualifiedOnDutyMap[jobId]).forEach((date) => {\n          this.numQualifiedOnDutyMap[jobId][date] += 1;\n        });\n      });\n    });\n  }\n\n  clone() {\n    const schedule = new Schedule();\n    schedule.jobs = this.jobs;\n    schedule.staff = this.staff;\n    schedule.numDaysOfCamp = this.numDaysOfCamp;\n    schedule.dayBeforeFirstDay = this.dayBeforeFirstDay;\n    schedule.dayAfterLastDay = this.dayAfterLastDay;\n    schedule.staffBreaks = _.cloneDeep(this.staffBreaks);\n    schedule.dateToIndexMap = this.dateToIndexMap;\n    schedule.jobIdMap = this.jobIdMap;\n    schedule.personIdMap = this.personIdMap;\n    schedule.personToDaysOffMap = _.cloneDeep(this.personToDaysOffMap);\n    schedule.numQualifiedOnDutyMap = _.cloneDeep(this.numQualifiedOnDutyMap);\n    return schedule;\n  }\n\n  getDay(date) {\n    const index = this.dateToIndexMap[date];\n    return this.staffBreaks[index];\n  }\n\n  getPerson(personId) {\n    return this.personIdMap[personId];\n  }\n\n  getDaysOff(personId) {\n    return this.personToDaysOffMap[personId];\n  }\n\n  getNumQualifiedOnDutyStaff(jobId, date) {\n    return this.numQualifiedOnDutyMap[jobId][date];\n  }\n\n  addDayOff(personId, date) {\n    this.personToDaysOffMap[personId].push(date);\n    this.personToDaysOffMap[personId] = this.personToDaysOffMap[personId].sort();\n    \n    const dayIndex = this.dateToIndexMap[date];\n    this.staffBreaks[dayIndex].staffOnBreak.push(personId);\n    \n    const person = this.getPerson(personId);\n    person.jobs.forEach((jobId) => {\n      if (date in this.numQualifiedOnDutyMap[jobId]) {\n        this.numQualifiedOnDutyMap[jobId][date] -= 1;\n      }\n    });\n  }\n\n  removeDayOff(personId, date) {\n    _.remove(this.personToDaysOffMap[personId], (x) => x === date);\n\n    const dayIndex = this.dateToIndexMap[date];\n    _.remove(this.staffBreaks[dayIndex].staffOnBreak, (x) => x === personId);\n    \n    const person = this.getPerson(personId);\n    person.jobs.forEach((jobId) => {\n      if (date in this.numQualifiedOnDutyMap[jobId]) {\n        this.numQualifiedOnDutyMap[jobId][date] += 1;\n      }\n    });\n  }\n\n  moveDayOff(personId, oldDate, newDate) {\n    this.removeDayOff(personId, oldDate);\n    this.addDayOff(personId, newDate);\n  }\n}","import { getDateDiff } from '../../util/date';\n\nexport const scorePeople = (schedule) => {\n  const scores = [];\n  for (let i = 0; i < schedule.staff.length; i++) {\n    const person = schedule.staff[i];\n    const score = scorePersonClumpiness(person, schedule);\n    scores.push(score);\n  }\n  return scores;\n};\n\nconst scorePersonClumpiness = (person, schedule) => {\n  const idealDaySpacing = (schedule.numDaysOfCamp - person.allottedDaysOff) / (person.allottedDaysOff + 1);\n\n  let score = 0;\n  const days = [\n    schedule.dayBeforeFirstDay,\n    ...schedule.getDaysOff(person.id),\n    schedule.dayAfterLastDay\n  ];\n  for (let i = 0; i < days.length - 1; i++) {\n    const startDate = days[i];\n    const endDate = days[i + 1];\n    score += Math.pow(getDateDiff(endDate, startDate), 2);\n  }\n  \n  const idealScore = Math.sqrt(Math.pow(idealDaySpacing, 2) * (days.length - 1));\n  score = Math.sqrt(score);\n\n  return idealScore / score * 100;\n};","import { AVG_HAPPINESS_WEIGHT, CAMP_SCORE_WEIGHT, FAIRNESS_WEIGHT, PEOPLE_SCORE_WEIGHT } from '../../constants';\nimport { scoreCamp } from './scoreCamp';\nimport { scorePeople } from './scorePeople';\n\nlet numInvocations = 0;\n\nexport const getNumScoreInvocations = () => numInvocations; \n\nexport const resetNumScoreInvocations = () => numInvocations = 0;\n\nexport const scoreSchedule = (schedule) => {\n  numInvocations++;\n\n  const peopleScores = scorePeople(schedule);\n  const avgPeopleScore = (\n    peopleScores.reduce((sum, score) => sum + score, 0) /\n    peopleScores.length\n  );\n  const minPeopleScore = peopleScores.reduce((min, score) => Math.min(min, score), peopleScores[0]);\n  const peopleScore = (\n    FAIRNESS_WEIGHT * minPeopleScore +\n    AVG_HAPPINESS_WEIGHT * avgPeopleScore\n  );\n\n  const campScore = scoreCamp(schedule);\n\n  const overallScore = (\n    CAMP_SCORE_WEIGHT * campScore +\n    PEOPLE_SCORE_WEIGHT * peopleScore\n  );\n\n  return {\n    peopleScores,\n    campScore,\n    overallScore,\n  };\n};","export const scoreCamp = (schedule) => {\n  let score = 0;\n  for (let i = 0; i < schedule.jobs.length; i++) {\n    const job = schedule.jobs[i];\n    for (let j = 0; j < job.dateRequirements.length; j++) {\n      const { date, numStaff } = job.dateRequirements[j];\n      const numQualifiedOnDutyStaff = schedule.getNumQualifiedOnDutyStaff(job.id, date);\n      if (numQualifiedOnDutyStaff >= numStaff) {\n        score += 100 / schedule.jobs.length / job.dateRequirements.length;\n      } else {\n        score += 100 / schedule.jobs.length / job.dateRequirements.length * (numQualifiedOnDutyStaff / numStaff);\n      }\n    }\n  }\n  return score;\n};","import { parseJobs } from './parsing/jobParser';\nimport { Schedule } from './Schedule';\nimport { getNumScoreInvocations, resetNumScoreInvocations, scoreSchedule } from './scoring/scoreSchedule';\nimport { parseStaff } from './parsing/staffParser';\nimport { WORKER_MESSAGE_TYPES } from '../constants';\n\n// Web worker utils ============================================================\n\n/* eslint-disable no-restricted-globals */\n\nself.onmessage = async (message) => {\n  const { startDate, endDate, jobs, staff } = message.data;\n  const result = makeSchedule(startDate, endDate, jobs, staff);\n  self.postMessage({\n    type: WORKER_MESSAGE_TYPES.RESULT, \n    payload: result\n  });\n};\n\nconst sendNumCalculationsUpdate = (numCalculations) => {\n  self.postMessage({\n    type: WORKER_MESSAGE_TYPES.NUM_CALCULATIONS, \n    payload: numCalculations\n  });\n};\n\n/* eslint-enable no-restricted-globals */\n\n// Scheduling ==================================================================\n\nexport const makeSchedule = (startDate, endDate, rawJobs, rawStaff) => {\n  resetNumScoreInvocations();\n  \n  const jobs = parseJobs(startDate, endDate, rawJobs);\n  const staff = parseStaff(rawStaff);\n\n  let schedule = new Schedule();\n  schedule.initEmptySchedule(startDate, endDate, jobs, staff);\n  schedule = populateSchedule(schedule);\n  schedule = optimizeSchedule(schedule);\n  const scores = scoreSchedule(schedule);\n\n  return { schedule, scores };\n};\n\nconst populateSchedule = (schedule) => {\n  const targetDaysOff = schedule.staff.reduce((days, person) => days + person.allottedDaysOff, 0);\n  let actualDaysOff = 0;\n  while (actualDaysOff < targetDaysOff) {\n\n    sendNumCalculationsUpdate(getNumScoreInvocations());\n\n    schedule = getBestAdd(schedule).schedule;\n    actualDaysOff++;\n  }\n  return schedule;\n};\n\nconst optimizeSchedule = (schedule) => {\n  \n  let scores = scoreSchedule(schedule);\n\n  while (true) {\n\n    sendNumCalculationsUpdate(getNumScoreInvocations());\n\n    let minScore = 1000;\n    let minIndex = -1;\n    for (let i = 0; i < scores.peopleScores.length; i++) {\n      const score = scores.peopleScores[i];\n      if (score < minScore) {\n        minScore = score;\n        minIndex = i;\n      }\n    }\n    const person = schedule.staff[minIndex];\n    const bestMove = getBestPersonMove(schedule, person);\n    if (bestMove.scores.overallScore > scores.overallScore) {\n      schedule = bestMove.schedule;\n      scores = bestMove.scores;\n      continue;\n    }\n\n    // TODO: 2 person trades\n\n    // TODO: 3 person trades\n\n    // TODO: optimize for 2nd worst schedule, 3rd worst, etc...\n\n    return schedule;    \n  }\n};\n\nconst getBestAdd = (schedule) => {\n\n  let bestScores = { overallScore: -1 };\n  let bestSchedule = null;\n\n  for (let i = 0; i < schedule.staff.length; i++) {\n    const person = schedule.staff[i];\n    const daysOff = schedule.getDaysOff(person.id);\n    if (daysOff.length < person.allottedDaysOff) {\n      for (let j = 0; j < schedule.staffBreaks.length; j++) {\n        const day = schedule.staffBreaks[j];\n        if (!daysOff.includes(day.date)) {\n          const possibleSchedule = schedule.clone();\n          possibleSchedule.addDayOff(person.id, day.date);\n          const scores = scoreSchedule(possibleSchedule);\n          if (scores.overallScore > bestScores.overallScore) {\n            bestScores = scores;\n            bestSchedule = possibleSchedule;\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    scores: bestScores,\n    schedule: bestSchedule,\n  };\n};\n\nconst getBestPersonMove = (schedule, person) => {\n\n  let bestScores = { overallScore: -1 };\n  let bestSchedule = null;\n\n  const daysOff = schedule.getDaysOff(person.id);\n  for (let j = 0; j < daysOff.length; j++) {\n    const oldDate = daysOff[j];\n    for (let k = 0; k < schedule.staffBreaks.length; k++) {\n      const newDate = schedule.staffBreaks[k].date;\n      if (oldDate !== newDate && !daysOff.includes(newDate)) {\n        const possibleSchedule = schedule.clone();\n        possibleSchedule.moveDayOff(person.id, oldDate, newDate);\n        const scores = scoreSchedule(possibleSchedule);\n        if (scores.overallScore > bestScores.overallScore) {\n          bestScores = scores;\n          bestSchedule = possibleSchedule;\n        }\n      }\n    }\n  }\n   \n  return {\n    scores: bestScores,\n    schedule: bestSchedule,\n  };\n};\n\n","export const parseStaff = (rawStaff) => {\n  return rawStaff.map((person) => {\n    return {\n      ...person,\n      allottedDaysOff: 4 // TODO: un-hardcode\n    };\n  });\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [94], function() { return __webpack_require__(800); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"f84c3752\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/scheduler-demo/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t800: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkcamp_react\"] = self[\"webpackChunkcamp_react\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn __webpack_require__.e(94).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["STAFF_REQUIREMENT_TYPES","WORKER_MESSAGE_TYPES","createDateRange","startDate","endDate","range","current","moment","end","push","format","add","dateDiffCache","getDateDiff","key","diff","makeDateRequirements","staffRequirement","type","numStaff","map","date","mergeDateRequirements","dateRequirements","Schedule","jobs","staff","staffBreaks","numDaysOfCamp","dayBeforeFirstDay","dayAfterLastDay","dateToIndexMap","jobIdMap","personIdMap","personToDaysOffMap","numQualifiedOnDutyMap","this","subtract","staffOnBreak","forEach","day","index","job","id","person","jobId","Object","keys","schedule","_","personId","sort","dayIndex","getPerson","x","oldDate","newDate","removeDayOff","addDayOff","scorePersonClumpiness","idealDaySpacing","allottedDaysOff","score","days","getDaysOff","i","length","Math","pow","sqrt","numInvocations","getNumScoreInvocations","scoreSchedule","peopleScores","scores","scorePeople","avgPeopleScore","reduce","sum","peopleScore","min","campScore","j","numQualifiedOnDutyStaff","getNumQualifiedOnDutyStaff","scoreCamp","overallScore","self","onmessage","message","data","result","makeSchedule","postMessage","payload","sendNumCalculationsUpdate","numCalculations","rawJobs","rawStaff","staffRequirements","parseJobs","parseStaff","initEmptySchedule","populateSchedule","optimizeSchedule","targetDaysOff","actualDaysOff","getBestAdd","minScore","minIndex","bestMove","getBestPersonMove","bestScores","bestSchedule","daysOff","includes","possibleSchedule","clone","k","moveDayOff","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","f","e","chunkId","Promise","all","promises","u","miniCssF","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","nmd","paths","children","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next","then"],"sourceRoot":""}