{"version":3,"file":"static/js/800.88c02bda.chunk.js","mappings":"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","sources":["constants.js","util/date.js","scheduler/parsing/jobParser.js","scheduler/Schedule.js","scheduler/scoring/scorePeople.js","scheduler/scoring/scoreSchedule.js","scheduler/scoring/scoreCamp.js","scheduler/scheduler.js","scheduler/parsing/staffParser.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/node module decorator","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["export const STAFF_REQUIREMENT_TYPES = {\n  ALL_DAYS: 'ALL_DAYS'\n};\n\nexport const WORKER_MESSAGE_TYPES = {\n  NUM_CALCULATIONS: 'NUM_CALCULATIONS',\n  RESULT: 'RESULT'\n};\n\nexport const CAMP_SCORE_WEIGHT = 99999;\nexport const PEOPLE_SCORE_WEIGHT = 1;\n\nexport const FAIRNESS_WEIGHT = 1;\nexport const AVG_HAPPINESS_WEIGHT = 1;\n\nexport const PEOPLE_CLUMPINESS_WEIGHT = 1;\nexport const PEOPLE_FRIENDS_WEIGHT = 1;\nexport const PEOPLE_BEST_FRIEND_WEIGHT = 5;\nexport const PEOPLE_REQUESTED_DAYS_OFF_WEIGHT = 5;\nexport const PEOPLE_ENEMY_WEIGHT = 5;","import moment from 'moment';\n\nexport const createDateRange = (startDate, endDate) => {\n  const range = [];\n  const current = moment(startDate);\n  const end = moment(endDate);\n  while (current <= end) {\n    range.push(current.format('YYYY-MM-DD'));\n    current.add(1, 'day');\n  }\n  return range;\n};\n\nconst dateDiffCache = {};\nexport const getDateDiff = (endDate, startDate) => {\n  const key = `${endDate} - ${startDate}`;\n  if (!(key in dateDiffCache)) {\n    const diff = moment(endDate).diff(moment(startDate), 'days');\n    dateDiffCache[key] = diff;\n  }\n  return dateDiffCache[key];\n};","import { STAFF_REQUIREMENT_TYPES } from '../../constants';\nimport { createDateRange } from '../../util/date';\n\nexport const parseJobs = (startDate, endDate, rawJobs) => {\n  const jobs = [];\n  for (let i = 0; i < rawJobs.length; i++) {\n    jobs.push({ ...rawJobs[i] });\n    jobs[i].dateRequirements = rawJobs[i].staffRequirements.map(makeDateRequirements(startDate, endDate));\n    jobs[i].dateRequirements = mergeDateRequirements(jobs[i].dateRequirements);\n  }\n  return jobs;\n};\n\nconst makeDateRequirements = (startDate, endDate) => (staffRequirement) => {\n  const { type, numStaff } = staffRequirement;\n  if (type === STAFF_REQUIREMENT_TYPES.ALL_DAYS) {\n    const dateRange = createDateRange(startDate, endDate);\n    return dateRange.map((date) => ({\n      date,\n      numStaff\n    }));\n  }\n};\n\nconst mergeDateRequirements = (dateRequirements) => {\n  // TODO\n  return dateRequirements[0];\n};","import { createDateRange } from '../util/date';\nimport _ from 'lodash';\nimport moment from 'moment';\n\nexport class Schedule {\n\n  lastMoveDescription = '';\n\n  jobs = [];\n  staff = [];\n  staffBreaks = [];\n\n  numDaysOfCamp = 0;\n  dayBeforeFirstDay = null;\n  dayAfterLastDay = null;\n\n  dateToIndexMap = {};\n  jobIdMap = {};\n  personIdMap = {};\n  personToDaysOffMap = {};\n  numQualifiedOnDutyMap = {};\n\n  initEmptySchedule(startDate, endDate, jobs, staff) {\n    this.jobs = jobs;\n    this.staff = staff;\n\n    this.numDaysOfCamp = moment(endDate).diff(moment(startDate), 'days') + 1;\n    this.dayBeforeFirstDay = moment(startDate).subtract(1, 'day').format('YYYY-MM-DD');\n    this.dayAfterLastDay = moment(endDate).add(1, 'day').format('YYYY-MM-DD');\n    \n    this.staffBreaks = createDateRange(startDate, endDate).map((date) => ({\n      date,\n      staffOnBreak: []\n    }));\n\n    this.staffBreaks.forEach((day, index) => {\n      this.dateToIndexMap[day.date] = index;\n    });\n\n    this.jobs.forEach((job) => {\n      this.jobIdMap[job.id] = job;\n      this.numQualifiedOnDutyMap[job.id] = {};\n      job.dateRequirements.forEach((day) => {\n        this.numQualifiedOnDutyMap[job.id][day.date] = 0;\n      });\n    });\n\n    this.staff.forEach((person) => {\n      this.personIdMap[person.id] = person;\n      this.personToDaysOffMap[person.id] = [];\n      person.jobs.forEach((jobId) => {\n        Object.keys(this.numQualifiedOnDutyMap[jobId]).forEach((date) => {\n          this.numQualifiedOnDutyMap[jobId][date] += 1;\n        });\n      });\n    });\n  }\n\n  clone() {\n    const schedule = new Schedule();\n    schedule.jobs = this.jobs;\n    schedule.staff = this.staff;\n    schedule.numDaysOfCamp = this.numDaysOfCamp;\n    schedule.dayBeforeFirstDay = this.dayBeforeFirstDay;\n    schedule.dayAfterLastDay = this.dayAfterLastDay;\n    schedule.staffBreaks = _.cloneDeep(this.staffBreaks);\n    schedule.dateToIndexMap = this.dateToIndexMap;\n    schedule.jobIdMap = this.jobIdMap;\n    schedule.personIdMap = this.personIdMap;\n    schedule.personToDaysOffMap = _.cloneDeep(this.personToDaysOffMap);\n    schedule.numQualifiedOnDutyMap = _.cloneDeep(this.numQualifiedOnDutyMap);\n    return schedule;\n  }\n\n  getDay(date) {\n    const index = this.dateToIndexMap[date];\n    return this.staffBreaks[index];\n  }\n\n  getPerson(personId) {\n    return this.personIdMap[personId];\n  }\n\n  getDaysOff(personId) {\n    return this.personToDaysOffMap[personId];\n  }\n\n  getNumQualifiedOnDutyStaff(jobId, date) {\n    return this.numQualifiedOnDutyMap[jobId][date];\n  }\n\n  addDayOff(personId, date) {\n    this.personToDaysOffMap[personId].push(date);\n    this.personToDaysOffMap[personId].sort();\n    \n    const dayIndex = this.dateToIndexMap[date];\n    this.staffBreaks[dayIndex].staffOnBreak.push(personId);\n    \n    const person = this.getPerson(personId);\n    person.jobs.forEach((jobId) => {\n      if (date in this.numQualifiedOnDutyMap[jobId]) {\n        this.numQualifiedOnDutyMap[jobId][date] -= 1;\n      }\n    });\n  }\n\n  removeDayOff(personId, date) {\n    _.remove(this.personToDaysOffMap[personId], (x) => x === date);\n\n    const dayIndex = this.dateToIndexMap[date];\n    _.remove(this.staffBreaks[dayIndex].staffOnBreak, (x) => x === personId);\n    \n    const person = this.getPerson(personId);\n    person.jobs.forEach((jobId) => {\n      if (date in this.numQualifiedOnDutyMap[jobId]) {\n        this.numQualifiedOnDutyMap[jobId][date] += 1;\n      }\n    });\n  }\n\n  moveDayOff(personId, oldDate, newDate) {\n    this.lastMoveDescription = `Moving ${this.personIdMap[personId].name} from ${oldDate} to ${newDate}`\n    this.removeDayOff(personId, oldDate);\n    this.addDayOff(personId, newDate);\n  }\n}","import { PEOPLE_BEST_FRIEND_WEIGHT, PEOPLE_CLUMPINESS_WEIGHT, PEOPLE_ENEMY_WEIGHT, PEOPLE_FRIENDS_WEIGHT, PEOPLE_REQUESTED_DAYS_OFF_WEIGHT } from '../../constants';\nimport { getDateDiff } from '../../util/date';\n\nexport const scorePeople = (schedule) => {\n  const scores = [];\n  for (let i = 0; i < schedule.staff.length; i++) {\n    const person = schedule.staff[i];\n    \n    let score = PEOPLE_CLUMPINESS_WEIGHT * scorePersonClumpiness(person, schedule);\n    let divisor = PEOPLE_CLUMPINESS_WEIGHT;\n\n    score += PEOPLE_FRIENDS_WEIGHT * scorePersonFriends(person, schedule);\n    divisor += PEOPLE_FRIENDS_WEIGHT;\n\n    score += PEOPLE_BEST_FRIEND_WEIGHT * scorePersonBestFriend(person, schedule);\n    divisor += PEOPLE_BEST_FRIEND_WEIGHT;\n\n    score += PEOPLE_ENEMY_WEIGHT * scorePersonEnemy(person, schedule);\n    divisor += PEOPLE_ENEMY_WEIGHT;\n\n    score += PEOPLE_REQUESTED_DAYS_OFF_WEIGHT * scorePersonRequestedDaysOff(person, schedule);\n    divisor += PEOPLE_REQUESTED_DAYS_OFF_WEIGHT;\n\n    score /= divisor;\n\n    scores.push(score);\n  }\n  return scores;\n};\n\nexport const getDetailedPeopleScores = (schedule) => {\n  const details = {};\n  for (let i = 0; i < schedule.staff.length; i++) {\n    const person = schedule.staff[i];\n    details[person.id] = {};\n    details[person.id].clumpiness = scorePersonClumpiness(person, schedule);\n    details[person.id].requestedDaysOff = scorePersonRequestedDaysOff(person, schedule);\n    details[person.id].bestFriend = scorePersonBestFriend(person, schedule);\n    details[person.id].enemy = scorePersonEnemy(person, schedule);\n    details[person.id].friends = scorePersonFriends(person, schedule);\n  }\n  return details;\n};\n\nconst scorePersonClumpiness = (person, schedule) => {\n  const idealDaySpacing = (schedule.numDaysOfCamp - person.allottedDaysOff) / (person.allottedDaysOff + 1);\n\n  let score = 0;\n  const days = [\n    schedule.dayBeforeFirstDay,\n    ...schedule.getDaysOff(person.id),\n    schedule.dayAfterLastDay\n  ];\n  for (let i = 0; i < days.length - 1; i++) {\n    const startDate = days[i];\n    const endDate = days[i + 1];\n    score += Math.pow(getDateDiff(endDate, startDate), 2);\n  }\n  \n  const idealScore = Math.sqrt(Math.pow(idealDaySpacing, 2) * (days.length - 1));\n  score = Math.sqrt(score);\n\n  return idealScore / score * 100;\n};\n\nconst scorePersonRequestedDaysOff = (person, schedule) => {\n  if (person.requestedDaysOff.length === 0) {\n    return 100;\n  }\n  const daysOff = schedule.getDaysOff(person.id);\n  return 100 * getNumDaysInCommon(daysOff, [person.requestedDaysOff]) / person.requestedDaysOff.length;\n};\n\nconst scorePersonFriends = (person, schedule) => {\n  if (person.friends.length === 0) {\n    return 100;\n  }\n  const maxDaysOffInCommon = person.friends.length * person.allottedDaysOff;\n  const daysOffInCommon = getNumDaysOffInCommon(person, person.friends, schedule);\n  return 100 * daysOffInCommon / maxDaysOffInCommon;\n};\n\nconst scorePersonBestFriend = (person, schedule) => {\n  if (!person.bestFriend) {\n    return 100;\n  }\n  const maxDaysOffInCommon = person.allottedDaysOff;\n  const daysOffInCommon = getNumDaysOffInCommon(person, [person.bestFriend], schedule);\n  return 100 * daysOffInCommon / maxDaysOffInCommon;\n};\n\nconst scorePersonEnemy = (person, schedule) => {\n  if (!person.enemy) {\n    return 100;\n  }\n  const maxDaysOffInCommon = person.allottedDaysOff;\n  const daysOffInCommon = getNumDaysOffInCommon(person, [person.enemy], schedule);\n  return 100 - (100 * daysOffInCommon / maxDaysOffInCommon);\n};\n\nconst getNumDaysOffInCommon = (person, peopleIds, schedule) => {\n  const personDaysOff = schedule.getDaysOff(person.id);\n  const peopleDaysOff = [];\n  for (let i = 0; i < peopleIds.length; i++) {\n    peopleDaysOff.push(schedule.getDaysOff(peopleIds[i]));\n  }\n  return getNumDaysInCommon(personDaysOff, peopleDaysOff);\n};\n\nconst getNumDaysInCommon = (days, otherDaysArray) => {\n\n  const otherDaysIndices = [];\n  for (let i = 0; i < otherDaysArray.length; i++) {\n    otherDaysIndices.push(0);\n  }\n\n  let daysInCommon = 0;\n\n  for (let i = 0; i < days.length; i++) {\n    const day = days[i];\n\n    for (let j = 0; j < otherDaysArray.length; j++) {\n      const otherDays = otherDaysArray[j];\n      if (otherDays.length === 0) {\n        continue;\n      }\n      let otherDay = otherDays[otherDaysIndices[j]];\n      while (\n        otherDaysIndices[j] < otherDays.length - 1 &&\n        otherDay < day\n      ) {\n        otherDaysIndices[j]++;\n        otherDay = otherDays[otherDaysIndices[j]];\n      }\n\n      if (otherDay === day) {\n        daysInCommon++;\n      }\n    }\n  }\n\n  return daysInCommon;\n};","import { AVG_HAPPINESS_WEIGHT, CAMP_SCORE_WEIGHT, FAIRNESS_WEIGHT, PEOPLE_SCORE_WEIGHT } from '../../constants';\nimport { scoreCamp } from './scoreCamp';\nimport { scorePeople } from './scorePeople';\n\nlet numInvocations = 0;\n\nexport const getNumScoreInvocations = () => numInvocations; \n\nexport const resetNumScoreInvocations = () => numInvocations = 0;\n\nexport const scoreSchedule = (schedule) => {\n  numInvocations++;\n\n  const peopleScores = scorePeople(schedule);\n  const avgPeopleScore = (\n    peopleScores.reduce((sum, score) => sum + score, 0) /\n    peopleScores.length\n  );\n  const minPeopleScore = peopleScores.reduce((min, score) => Math.min(min, score), peopleScores[0]);\n  let peopleScore = (\n    FAIRNESS_WEIGHT * minPeopleScore +\n    AVG_HAPPINESS_WEIGHT * avgPeopleScore\n  );\n  peopleScore /= (FAIRNESS_WEIGHT + AVG_HAPPINESS_WEIGHT);\n\n  const campScore = scoreCamp(schedule);\n\n  let overallScore = (\n    CAMP_SCORE_WEIGHT * campScore +\n    PEOPLE_SCORE_WEIGHT * peopleScore\n  );\n  overallScore /= (CAMP_SCORE_WEIGHT + PEOPLE_SCORE_WEIGHT);\n\n  return {\n    peopleScores,\n    campScore,\n    overallScore,\n  };\n};\n","export const scoreCamp = (schedule) => {\n  let score = 0;\n  for (let i = 0; i < schedule.jobs.length; i++) {\n    const job = schedule.jobs[i];\n    for (let j = 0; j < job.dateRequirements.length; j++) {\n      const { date, numStaff } = job.dateRequirements[j];\n      const numQualifiedOnDutyStaff = schedule.getNumQualifiedOnDutyStaff(job.id, date);\n      if (numQualifiedOnDutyStaff >= numStaff) {\n        score += 100 / schedule.jobs.length / job.dateRequirements.length;\n      } else {\n        score += 100 / schedule.jobs.length / job.dateRequirements.length * (numQualifiedOnDutyStaff / numStaff);\n      }\n    }\n  }\n  return score;\n};","import { parseJobs } from './parsing/jobParser';\nimport { Schedule } from './Schedule';\nimport { getNumScoreInvocations, resetNumScoreInvocations, scoreSchedule } from './scoring/scoreSchedule';\nimport { parseStaff } from './parsing/staffParser';\nimport { WORKER_MESSAGE_TYPES } from '../constants';\nimport _ from 'lodash';\nimport { getDetailedPeopleScores } from './scoring/scorePeople';\n\n// Web worker utils ============================================================\n\n/* eslint-disable no-restricted-globals */\n\nself.onmessage = async (message) => {\n  const { startDate, endDate, jobs, staff } = message.data;\n  const result = makeSchedule(startDate, endDate, jobs, staff);\n  self.postMessage({\n    type: WORKER_MESSAGE_TYPES.RESULT,\n    payload: result\n  });\n};\n\nconst sendNumCalculationsUpdate = (numCalculations) => {\n  self.postMessage({\n    type: WORKER_MESSAGE_TYPES.NUM_CALCULATIONS,\n    payload: numCalculations\n  });\n};\n\n/* eslint-enable no-restricted-globals */\n\n// Scheduling ==================================================================\n\nexport const makeSchedule = (startDate, endDate, rawJobs, rawStaff) => {\n  resetNumScoreInvocations();\n\n  const jobs = parseJobs(startDate, endDate, rawJobs);\n  const staff = parseStaff(rawStaff);\n\n  let schedule = new Schedule();\n  schedule.initEmptySchedule(startDate, endDate, jobs, staff);\n  schedule = populateSchedule(schedule);\n  schedule = optimizeSchedule(schedule);\n  const scores = scoreSchedule(schedule);\n  scores.detailedPeopleScores = getDetailedPeopleScores(schedule);\n\n  console.log(schedule.staff, schedule.personToDaysOffMap);\n\n  return { schedule, scores };\n};\n\nconst populateSchedule = (schedule) => {\n  const targetDaysOff = schedule.staff.reduce((days, person) => days + person.allottedDaysOff, 0);\n  let actualDaysOff = 0;\n\n  let scores = scoreSchedule(schedule);\n\n  while (actualDaysOff < targetDaysOff) {\n\n    sendNumCalculationsUpdate(getNumScoreInvocations());\n\n    const peopleIndices = getPeopleSortedByScore(scores);\n    let person;\n    for (let i = 0; i < peopleIndices.length; i++) {\n      const personIndex = peopleIndices[i];\n      person = schedule.staff[personIndex];\n      const daysOff = schedule.getDaysOff(person.id);\n      if (daysOff.length < person.allottedDaysOff) {\n        break;\n      }\n    }\n    const bestAdd = getBestPersonAdd(schedule, person);\n    schedule = bestAdd.schedule;\n    scores = bestAdd.scores;\n    actualDaysOff++;\n  }\n  return schedule;\n};\n\nconst optimizeSchedule = (schedule) => {\n\n  let scores = scoreSchedule(schedule);\n\n  while (true) {\n\n    sendNumCalculationsUpdate(getNumScoreInvocations());\n\n    const { isBetter, newSchedule, newScores } = getBetterSchedule(schedule, scores);\n\n    if (isBetter) {\n      schedule = newSchedule;\n      scores = newScores;\n      console.log(schedule.lastMoveDescription);\n    } else {\n      return schedule;\n    }\n  }\n};\n\nconst getPeopleSortedByScore = (scores) => {\n  let scoreIndices = [];\n  for (let i = 0; i < scores.peopleScores.length; i++) {\n    scoreIndices.push({\n      score: scores.peopleScores[i],\n      personIndex: i\n    });\n  }\n  scoreIndices = _.sortBy(scoreIndices, (item) => item.score);\n  const peopleIndices = [];\n  for (let i = 0; i < scoreIndices.length; i++) {\n    peopleIndices.push(scoreIndices[i].personIndex);\n  }\n  return peopleIndices;\n};\n\nconst getBestPersonAdd = (schedule, person) => {\n\n  let bestScores = { overallScore: -1 };\n  let bestSchedule = null;\n\n  const daysOff = schedule.getDaysOff(person.id);\n  if (daysOff.length < person.allottedDaysOff) {\n    for (let i = 0; i < schedule.staffBreaks.length; i++) {\n      const day = schedule.staffBreaks[i];\n      if (!daysOff.includes(day.date)) {\n        const possibleSchedule = schedule.clone();\n        possibleSchedule.addDayOff(person.id, day.date);\n        const scores = scoreSchedule(possibleSchedule);\n        if (scores.overallScore > bestScores.overallScore) {\n          bestScores = scores;\n          bestSchedule = possibleSchedule;\n        }\n      }\n    }\n  }\n\n  return {\n    scores: bestScores,\n    schedule: bestSchedule,\n  };\n};\n\nconst getBetterSchedule = (schedule, scores) => {\n\n  const peopleIndices = getPeopleSortedByScore(scores);\n  const moveTypes = [getBestPersonMove, getBestPersonTwoSwap, getBestPersonDaySwap];\n  for (let i = 0; i < peopleIndices.length; i++) {\n    const personIndex = peopleIndices[i];\n    const person = schedule.staff[personIndex];\n    for (let j = 0; j < moveTypes.length; j++) {\n      const getBestMove = moveTypes[j];\n      const bestMove = getBestMove(schedule, person);\n      if (bestMove.scores.overallScore > scores.overallScore) {\n        return {\n          isBetter: true,\n          newSchedule: bestMove.schedule,\n          newScores: bestMove.scores\n        };\n      }\n    }\n  }\n\n  return { isBetter: false };\n};\n\nconst getBestPersonMove = (schedule, person) => {\n\n  let bestScores = { overallScore: -1 };\n  let bestSchedule = null;\n\n  const daysOff = schedule.getDaysOff(person.id);\n  for (let i = 0; i < daysOff.length; i++) {\n    const oldDate = daysOff[i];\n    for (let j = 0; j < schedule.staffBreaks.length; j++) {\n      const newDate = schedule.staffBreaks[j].date;\n      if (oldDate !== newDate && !daysOff.includes(newDate)) {\n        const possibleSchedule = schedule.clone();\n        possibleSchedule.moveDayOff(person.id, oldDate, newDate);\n        const scores = scoreSchedule(possibleSchedule);\n        if (scores.overallScore > bestScores.overallScore) {\n          bestScores = scores;\n          bestSchedule = possibleSchedule;\n        }\n      }\n    }\n  }\n\n  return {\n    scores: bestScores,\n    schedule: bestSchedule,\n  };\n};\n\nconst getBestPersonTwoSwap = (schedule, person) => {\n\n  let bestScores = { overallScore: -1 };\n  let bestSchedule = null;\n\n  const daysOff = schedule.getDaysOff(person.id);\n  for (let i = 0; i < daysOff.length; i++) {\n    const personDate = daysOff[i];\n    for (let j = 0; j < schedule.staff.length; j++) {\n      const otherPerson = schedule.staff[j];\n      if (person.id !== otherPerson.id) {\n        const otherDaysOff = schedule.getDaysOff(otherPerson.id);\n        for (let k = 0; k < otherDaysOff.length; k++) {\n          const otherPersonDate = otherDaysOff[k];\n          if (\n            personDate !== otherPersonDate &&\n            !daysOff.includes(otherPersonDate) &&\n            !otherDaysOff.includes(personDate)\n          ) {\n            const possibleSchedule = schedule.clone();\n            possibleSchedule.moveDayOff(person.id, personDate, otherPersonDate);\n            possibleSchedule.moveDayOff(otherPerson.id, otherPersonDate, personDate);\n            const scores = scoreSchedule(possibleSchedule);\n            if (scores.overallScore > bestScores.overallScore) {\n              bestScores = scores;\n              bestSchedule = possibleSchedule;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    scores: bestScores,\n    schedule: bestSchedule,\n  };\n};\n\nconst getBestPersonDaySwap = (schedule, person) => {\n\n  let bestScores = { overallScore: -1 };\n  let bestSchedule = null;\n\n  const daysOff = schedule.getDaysOff(person.id);\n  for (let i = 0; i < daysOff.length; i++) {\n    const date = daysOff[i];\n    const day1 = schedule.getDay(date);\n    for (let j = 0; j < schedule.staffBreaks.length; j++) {\n      const day2 = schedule.staffBreaks[j];\n      if (day1.date !== day2.date) {\n        const possibleSchedule = schedule.clone();\n        for (let k = 0; k < day1.staffOnBreak.length; k++) {\n          const personId = day1.staffOnBreak[k];\n          possibleSchedule.moveDayOff(personId, day1.date, day2.date);\n        }\n        for (let k = 0; k < day2.staffOnBreak.length; k++) {\n          const personId = day2.staffOnBreak[k];\n          possibleSchedule.moveDayOff(personId, day2.date, day1.date);\n        }\n        const scores = scoreSchedule(possibleSchedule);\n        if (scores.overallScore > bestScores.overallScore) {\n          bestScores = scores;\n          bestSchedule = possibleSchedule;\n        }\n      }\n    }\n  }\n\n  return {\n    scores: bestScores,\n    schedule: bestSchedule,\n  };\n};","export const parseStaff = (rawStaff) => {\n  return rawStaff.map((person) => {\n    return {\n      ...person,\n      allottedDaysOff: 4 // TODO: un-hardcode\n    };\n  });\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [94], function() { return __webpack_require__(800); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"f84c3752\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/scheduler-demo/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t800: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkcamp_react\"] = self[\"webpackChunkcamp_react\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn __webpack_require__.e(94).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["STAFF_REQUIREMENT_TYPES","WORKER_MESSAGE_TYPES","createDateRange","startDate","endDate","range","current","moment","end","push","format","add","dateDiffCache","getDateDiff","key","diff","makeDateRequirements","staffRequirement","type","numStaff","map","date","mergeDateRequirements","dateRequirements","Schedule","lastMoveDescription","jobs","staff","staffBreaks","numDaysOfCamp","dayBeforeFirstDay","dayAfterLastDay","dateToIndexMap","jobIdMap","personIdMap","personToDaysOffMap","numQualifiedOnDutyMap","this","subtract","staffOnBreak","forEach","day","index","job","id","person","jobId","Object","keys","schedule","_","personId","sort","dayIndex","getPerson","x","oldDate","newDate","name","removeDayOff","addDayOff","scorePersonClumpiness","idealDaySpacing","allottedDaysOff","score","days","getDaysOff","i","length","Math","pow","sqrt","scorePersonRequestedDaysOff","requestedDaysOff","daysOff","getNumDaysInCommon","scorePersonFriends","friends","maxDaysOffInCommon","getNumDaysOffInCommon","scorePersonBestFriend","bestFriend","scorePersonEnemy","enemy","peopleIds","personDaysOff","peopleDaysOff","otherDaysArray","otherDaysIndices","daysInCommon","j","otherDays","otherDay","numInvocations","getNumScoreInvocations","scoreSchedule","peopleScores","scores","divisor","scorePeople","avgPeopleScore","reduce","sum","peopleScore","min","FAIRNESS_WEIGHT","campScore","numQualifiedOnDutyStaff","getNumQualifiedOnDutyStaff","scoreCamp","overallScore","CAMP_SCORE_WEIGHT","self","onmessage","message","data","result","makeSchedule","postMessage","payload","sendNumCalculationsUpdate","numCalculations","rawJobs","rawStaff","staffRequirements","parseJobs","parseStaff","initEmptySchedule","populateSchedule","optimizeSchedule","detailedPeopleScores","details","clumpiness","getDetailedPeopleScores","console","log","targetDaysOff","actualDaysOff","peopleIndices","getPeopleSortedByScore","personIndex","bestAdd","getBestPersonAdd","getBetterSchedule","isBetter","newSchedule","newScores","scoreIndices","item","bestScores","bestSchedule","includes","possibleSchedule","clone","moveTypes","getBestPersonMove","getBestPersonTwoSwap","getBestPersonDaySwap","bestMove","getBestMove","moveDayOff","personDate","otherPerson","otherDaysOff","k","otherPersonDate","day1","getDay","day2","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","f","e","chunkId","Promise","all","promises","u","miniCssF","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","nmd","paths","children","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next","then"],"sourceRoot":""}