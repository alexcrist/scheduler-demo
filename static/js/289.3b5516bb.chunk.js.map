{"version":3,"file":"static/js/289.3b5516bb.chunk.js","mappings":"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","sources":["constants.js","util/date.js","scheduler/Schedule.js","scheduler/scorePeople.js","scheduler/scoreSchedule.js","scheduler/scoreCamp.js","scheduler/scheduler.js","../webpack/bootstrap","../webpack/runtime/chunk loaded","../webpack/runtime/compat get default export","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/node module decorator","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/runtime/startup chunk dependencies","../webpack/startup"],"sourcesContent":["import moment from 'moment';\n\nexport const WORKER_MESSAGE_TYPES = {\n  NUM_CALCULATIONS: 'NUM_CALCULATIONS',\n  RESULT: 'RESULT'\n};\n\nexport const DEFAULT_SETTINGS = {\n\n  campScoreWeight: 9999999,\n  peopleScoreWeight: 1,\n\n  fairnessWeight: 10,\n  avgHappinessWeight: 1,\n\n  peopleClumpinessWeight: 1,\n  peopleFriendsWeight: 2,\n  peopleBestFriendWeight: 10,\n  peopleRequestedDaysOffWeight: 100,\n  peopleEnemyWeight: 20,\n  \n};\n\nexport const DATE_FORMAT = 'YYYY-MM-DD';\n\nexport const DOWNLOADED_EXAMPLE_INPUT_NAME = 'example_jobs_and_staff.xlsx';\nexport const DOWNLOADED_SCHEDULE_NAME = 'break_schedule.xlsx';\n\nexport const DEFAULT_NUM_BREAKS = 3;\n\nconst THIS_YEAR = moment().format('YYYY');\nexport const DEFAULT_CAMP_START_DATE = `${THIS_YEAR}-06-01`;\nexport const DEFAULT_CAMP_END_DATE = `${THIS_YEAR}-08-31`;\n\nexport const EXCEL_INPUT = {\n  NAME: 'A',\n  JOBS: {\n    ALL_QUALIFIED: 'B',\n    REQUIRED_NUM_STAFF: 'C',\n    ALL_DAYS: 'D',\n    MON: 'E',\n    TUE: 'F',\n    WED: 'G',\n    THU: 'H',\n    FRI: 'I',\n    SAT: 'J',\n    SUN: 'K',\n    SPECIFIC_DATE: 'L'\n  },\n  STAFF: {\n    START_DATE: 'B',\n    END_DATE: 'C',\n    REQUESTED_DAY_OFF_1: 'D',\n    REQUESTED_DAY_OFF_2: 'E',\n    REQUESTED_DAY_OFF_3: 'F',\n    REQUESTED_DAY_OFF_4: 'G',\n    BEST_FRIEND: 'H',\n    ENEMY: 'I',\n    FRIEND_1: 'J',\n    FRIEND_2: 'K',\n    FRIEND_3: 'L',\n    FRIEND_4: 'M',\n    FRIEND_5: 'N',\n    JOB_1: 'O',\n    JOB_2: 'P',\n    JOB_3: 'Q',\n    JOB_4: 'R',\n    JOB_5: 'S',\n    JOB_6: 'T',\n    JOB_7: 'U',\n  },\n};\n  ","import moment from 'moment';\nimport { DATE_FORMAT } from '../constants';\n\nexport const createDateRange = (startDate, endDate) => {\n  const range = [];\n  const current = moment(startDate);\n  const end = moment(endDate);\n  while (current <= end) {\n    range.push(current.format(DATE_FORMAT));\n    current.add(1, 'day');\n  }\n  return range;\n};\n\nconst dateDiffCache = {};\nexport const getDateDiff = (endDate, startDate) => {\n  const key = `${endDate} - ${startDate}`;\n  if (!(key in dateDiffCache)) {\n    const diff = moment(endDate).diff(moment(startDate), 'days');\n    dateDiffCache[key] = diff;\n  }\n  return dateDiffCache[key];\n};\n\n\nexport const getNumDaysInCommon = (days, otherDaysArray) => {\n\n  const otherDaysIndices = [];\n  for (let i = 0; i < otherDaysArray.length; i++) {\n    otherDaysIndices.push(0);\n  }\n\n  let daysInCommon = 0;\n\n  for (let i = 0; i < days.length; i++) {\n    const day = days[i];\n\n    for (let j = 0; j < otherDaysArray.length; j++) {\n      const otherDays = otherDaysArray[j];\n      if (otherDays.length === 0) {\n        continue;\n      }\n      let otherDay = otherDays[otherDaysIndices[j]];\n      while (\n        otherDaysIndices[j] < otherDays.length - 1 &&\n        otherDay < day\n      ) {\n        otherDaysIndices[j]++;\n        otherDay = otherDays[otherDaysIndices[j]];\n      }\n\n      if (otherDay === day) {\n        daysInCommon++;\n      }\n    }\n  }\n\n  return daysInCommon;\n};\n\nexport const convertTimeZoneToUTC = (date) => {\n  const string = date.toLocaleString('en-US', { timeZone: 'UTC' });\n  return new Date(string);   \n};","import _ from 'lodash';\nimport { createDateRange } from '../util/date';\n\nexport class Schedule {\n\n  lastMoveDescription = '';\n\n  jobs = [];\n  staff = [];\n  staffBreaks = [];\n  settings = {};\n\n  dateToIndexMap = {};\n  jobIdMap = {};\n  personIdMap = {};\n  personToDaysOffMap = {};\n  numQualifiedOnDutyMap = {};\n\n  initEmptySchedule(startDate, endDate, jobs, staff, settings) {\n    this.jobs = jobs;\n    this.staff = staff;\n    this.settings = settings;\n\n    this.staffBreaks = createDateRange(startDate, endDate).map((date) => ({\n      date,\n      staffOnBreak: []\n    }));\n\n    this.staffBreaks.forEach((day, index) => {\n      this.dateToIndexMap[day.date] = index;\n    });\n\n    this.jobs.forEach((job) => {\n      this.jobIdMap[job.id] = job;\n      this.numQualifiedOnDutyMap[job.id] = {};\n      job.dateRequirements.forEach((date) => {\n        this.numQualifiedOnDutyMap[job.id][date] = 0;\n      });\n    });\n\n    this.staff.forEach((person) => {\n      this.personIdMap[person.id] = person;\n      this.personToDaysOffMap[person.id] = [];\n      person.jobs.forEach((jobId) => {\n        Object.keys(this.numQualifiedOnDutyMap[jobId]).forEach((date) => {\n          if (person.startDate <= date && person.endDate >= date) {\n            this.numQualifiedOnDutyMap[jobId][date] += 1;\n          }\n        });\n      });\n    });\n  }\n\n  clone() {\n    const schedule = new Schedule();\n    schedule.jobs = this.jobs;\n    schedule.staff = this.staff;\n    schedule.settings = this.settings;\n    schedule.staffBreaks = _.cloneDeep(this.staffBreaks);\n    schedule.dateToIndexMap = this.dateToIndexMap;\n    schedule.jobIdMap = this.jobIdMap;\n    schedule.personIdMap = this.personIdMap;\n    schedule.personToDaysOffMap = _.cloneDeep(this.personToDaysOffMap);\n    schedule.numQualifiedOnDutyMap = _.cloneDeep(this.numQualifiedOnDutyMap);\n    return schedule;\n  }\n\n  getDay(date) {\n    const index = this.dateToIndexMap[date];\n    return this.staffBreaks[index];\n  }\n\n  getPerson(personId) {\n    return this.personIdMap[personId];\n  }\n\n  getDaysOff(personId) {\n    return this.personToDaysOffMap[personId];\n  }\n\n  getNumQualifiedOnDutyStaff(jobId, date) {\n    return this.numQualifiedOnDutyMap[jobId][date];\n  }\n\n  addDayOff(personId, date) {\n    this.personToDaysOffMap[personId].push(date);\n    this.personToDaysOffMap[personId].sort();\n    \n    const dayIndex = this.dateToIndexMap[date];\n    this.staffBreaks[dayIndex].staffOnBreak.push(personId);\n    \n    const person = this.getPerson(personId);\n    person.jobs.forEach((jobId) => {\n      if (date in this.numQualifiedOnDutyMap[jobId]) {\n        this.numQualifiedOnDutyMap[jobId][date] -= 1;\n      }\n    });\n  }\n\n  removeDayOff(personId, date) {\n    _.remove(this.personToDaysOffMap[personId], (x) => x === date);\n\n    const dayIndex = this.dateToIndexMap[date];\n    _.remove(this.staffBreaks[dayIndex].staffOnBreak, (x) => x === personId);\n    \n    const person = this.getPerson(personId);\n    person.jobs.forEach((jobId) => {\n      if (date in this.numQualifiedOnDutyMap[jobId]) {\n        this.numQualifiedOnDutyMap[jobId][date] += 1;\n      }\n    });\n  }\n\n  moveDayOff(personId, oldDate, newDate) {\n    this.lastMoveDescription = `Moving ${this.personIdMap[personId].name} from ${oldDate} to ${newDate}`\n    this.removeDayOff(personId, oldDate);\n    this.addDayOff(personId, newDate);\n  }\n}","import { getDateDiff, getNumDaysInCommon } from '../util/date';\n\nexport const scorePeople = (schedule) => {\n\n  const {\n    peopleClumpinessWeight,\n    peopleFriendsWeight,\n    peopleBestFriendWeight,\n    peopleRequestedDaysOffWeight,\n    peopleEnemyWeight,\n  } = schedule.settings;\n\n  const scores = [];\n  for (let i = 0; i < schedule.staff.length; i++) {\n    const person = schedule.staff[i];\n    \n    let score = peopleClumpinessWeight * scorePersonClumpiness(person, schedule);\n    let divisor = peopleClumpinessWeight;\n\n    score += peopleFriendsWeight * scorePersonFriends(person, schedule);\n    divisor += peopleFriendsWeight;\n\n    score += peopleBestFriendWeight * scorePersonBestFriend(person, schedule);\n    divisor += peopleBestFriendWeight;\n\n    score += peopleEnemyWeight * scorePersonEnemy(person, schedule);\n    divisor += peopleEnemyWeight;\n\n    score += peopleRequestedDaysOffWeight * scorePersonRequestedDaysOff(person, schedule);\n    divisor += peopleRequestedDaysOffWeight;\n\n    score /= divisor;\n\n    scores.push(score);\n  }\n  return scores;\n};\n\nconst scorePersonClumpiness = (person, schedule) => {\n  const idealDaySpacing = (person.numDaysWorking - person.allottedDaysOff) / (person.allottedDaysOff + 1);\n\n  let score = 0;\n  const days = [\n    person.dayBeforeFirstDay,\n    ...schedule.getDaysOff(person.id),\n    person.dayAfterLastDay\n  ];\n  for (let i = 0; i < days.length - 1; i++) {\n    const startDate = days[i];\n    const endDate = days[i + 1];\n    score += Math.pow(getDateDiff(endDate, startDate), 2);\n  }\n  \n  const idealScore = Math.sqrt(Math.pow(idealDaySpacing, 2) * (days.length - 1));\n  score = Math.sqrt(score);\n\n  return idealScore / score * 100;\n};\n\nconst scorePersonRequestedDaysOff = (person, schedule) => {\n  if (person.requestedDaysOff.length === 0) {\n    return 100;\n  }\n  const daysOff = schedule.getDaysOff(person.id);\n  return 100 * getNumDaysInCommon(daysOff, [person.requestedDaysOff]) / person.requestedDaysOff.length;\n};\n\nconst scorePersonFriends = (person, schedule) => {\n  if (person.friends.length === 0) {\n    return 100;\n  }\n  let maxDaysOffInCommon = 0;\n  for (let i = 0; i < person.friends.length; i++) {\n    const friend = schedule.getPerson(person.friends[i]);\n    maxDaysOffInCommon += Math.min(person.allottedDaysOff, friend.allottedDaysOff);\n  }\n  const daysOffInCommon = getNumDaysOffInCommon(person, person.friends, schedule);\n  return 100 * daysOffInCommon / maxDaysOffInCommon;\n};\n\nconst scorePersonBestFriend = (person, schedule) => {\n  if (!person.bestFriend) {\n    return 100;\n  }\n  const bestFriend = schedule.getPerson(person.bestFriend);\n  const maxDaysOffInCommon = Math.min(person.allottedDaysOff, bestFriend.allottedDaysOff);\n  const daysOffInCommon = getNumDaysOffInCommon(person, [person.bestFriend], schedule);\n  return 100 * daysOffInCommon / maxDaysOffInCommon;\n};\n\nconst scorePersonEnemy = (person, schedule) => {\n  if (!person.enemy) {\n    return 100;\n  }\n  const enemy = schedule.getPerson(person.enemy);\n  const maxDaysOffInCommon = Math.min(person.allottedDaysOff, enemy.allottedDaysOff);\n  const daysOffInCommon = getNumDaysOffInCommon(person, [person.enemy], schedule);\n  return 100 - (100 * daysOffInCommon / maxDaysOffInCommon);\n};\n\nconst getNumDaysOffInCommon = (person, peopleIds, schedule) => {\n  const personDaysOff = schedule.getDaysOff(person.id);\n  const peopleDaysOff = [];\n  for (let i = 0; i < peopleIds.length; i++) {\n    peopleDaysOff.push(schedule.getDaysOff(peopleIds[i]));\n  }\n  return getNumDaysInCommon(personDaysOff, peopleDaysOff);\n};\n\n","import { scoreCamp } from './scoreCamp';\nimport { scorePeople } from './scorePeople';\n\nlet numInvocations = 0;\n\nexport const getNumScoreInvocations = () => numInvocations; \n\nexport const resetNumScoreInvocations = () => numInvocations = 0;\n\nexport const scoreSchedule = (schedule) => {\n  numInvocations++;\n\n  const {\n    campScoreWeight,\n    peopleScoreWeight,\n    fairnessWeight,\n    avgHappinessWeight\n  } = schedule.settings;\n\n  const peopleScores = scorePeople(schedule);\n  const avgPeopleScore = (\n    peopleScores.reduce((sum, score) => sum + score, 0) /\n    peopleScores.length\n  );\n  const minPeopleScore = peopleScores.reduce((min, score) => Math.min(min, score), peopleScores[0]);\n  let peopleScore = (\n    fairnessWeight * minPeopleScore +\n    avgHappinessWeight * avgPeopleScore\n  );\n  peopleScore /= (fairnessWeight + avgHappinessWeight);\n\n  const campScore = scoreCamp(schedule);\n\n  let overallScore = (\n    campScoreWeight * campScore +\n    peopleScoreWeight * peopleScore\n  );\n  overallScore /= (campScoreWeight + peopleScoreWeight);\n\n  return {\n    peopleScores,\n    campScore,\n    overallScore,\n  };\n};\n","export const scoreCamp = (schedule) => {\n  let score = 0;\n  for (let i = 0; i < schedule.jobs.length; i++) {\n    const job = schedule.jobs[i];\n    for (let j = 0; j < job.dateRequirements.length; j++) {\n      const date = job.dateRequirements[j];\n      const numQualifiedOnDutyStaff = schedule.getNumQualifiedOnDutyStaff(job.id, date);\n      if (numQualifiedOnDutyStaff >= job.numStaff) {\n        score += 100 / schedule.jobs.length / job.dateRequirements.length;\n      } else {\n        score += 100 / schedule.jobs.length / job.dateRequirements.length * (numQualifiedOnDutyStaff / job.numStaff);\n      }\n    }\n  }\n  return score;\n};","import _ from 'lodash';\nimport { WORKER_MESSAGE_TYPES } from '../constants';\nimport { Schedule } from './Schedule';\nimport { getNumScoreInvocations, resetNumScoreInvocations, scoreSchedule } from './scoreSchedule';\n\n// Web worker utils ============================================================\n\n/* eslint-disable no-restricted-globals */\n\nself.onmessage = async (message) => {\n  const { startDate, endDate, jobs, staff, settings } = message.data;\n  const result = makeSchedule(startDate, endDate, jobs, staff, settings);\n  self.postMessage({\n    type: WORKER_MESSAGE_TYPES.RESULT,\n    payload: result\n  });\n};\n\nconst sendNumCalculationsUpdate = (numCalculations) => {\n  self.postMessage({\n    type: WORKER_MESSAGE_TYPES.NUM_CALCULATIONS,\n    payload: numCalculations\n  });\n};\n\n/* eslint-enable no-restricted-globals */\n\n// Scheduling ==================================================================\n\nexport const makeSchedule = (startDate, endDate, jobs, staff, settings) => {\n  resetNumScoreInvocations();\n\n  let schedule = new Schedule();\n  schedule.initEmptySchedule(startDate, endDate, jobs, staff, settings);\n  schedule = populateSchedule(schedule);\n  schedule = optimizeSchedule(schedule);\n  const scores = scoreSchedule(schedule);\n\n  return { schedule, scores };\n};\n\nconst populateSchedule = (schedule) => {\n  const targetDaysOff = schedule.staff.reduce((days, person) => days + person.allottedDaysOff, 0);\n  let actualDaysOff = 0;\n\n  let scores = scoreSchedule(schedule);\n\n  while (actualDaysOff < targetDaysOff) {\n\n    sendNumCalculationsUpdate(getNumScoreInvocations());\n\n    const peopleIndices = getPeopleSortedByScore(scores);\n    let person;\n    for (let i = 0; i < peopleIndices.length; i++) {\n      const personIndex = peopleIndices[i];\n      person = schedule.staff[personIndex];\n      const daysOff = schedule.getDaysOff(person.id);\n      if (daysOff.length < person.allottedDaysOff) {\n        break;\n      }\n    }\n    const bestAdd = getBestPersonAdd(schedule, person);\n    schedule = bestAdd.schedule;\n    scores = bestAdd.scores;\n    actualDaysOff++;\n  }\n  return schedule;\n};\n\nconst optimizeSchedule = (schedule) => {\n\n  let scores = scoreSchedule(schedule);\n\n  while (true) {\n\n    sendNumCalculationsUpdate(getNumScoreInvocations());\n\n    const { isBetter, newSchedule, newScores } = getBetterSchedule(schedule, scores);\n\n    if (isBetter) {\n      schedule = newSchedule;\n      scores = newScores;\n    } else {\n      return schedule;\n    }\n  }\n};\n\nconst getBetterSchedule = (schedule, scores) => {\n\n  const peopleIndices = getPeopleSortedByScore(scores);\n  const moveTypes = [getBestPersonMove, getBestPersonTwoSwap, getBestPersonDaySwap];\n  for (let i = 0; i < peopleIndices.length; i++) {\n    const personIndex = peopleIndices[i];\n    const person = schedule.staff[personIndex];\n    for (let j = 0; j < moveTypes.length; j++) {\n      const getBestMove = moveTypes[j];\n      const bestMove = getBestMove(schedule, person);\n      if (bestMove.scores.overallScore > scores.overallScore) {\n        return {\n          isBetter: true,\n          newSchedule: bestMove.schedule,\n          newScores: bestMove.scores\n        };\n      }\n    }\n  }\n\n  return { isBetter: false };\n};\n\nconst getPeopleSortedByScore = (scores) => {\n  let scoreIndices = [];\n  for (let i = 0; i < scores.peopleScores.length; i++) {\n    scoreIndices.push({\n      score: scores.peopleScores[i],\n      personIndex: i\n    });\n  }\n  scoreIndices = _.sortBy(scoreIndices, (item) => item.score);\n  const peopleIndices = [];\n  for (let i = 0; i < scoreIndices.length; i++) {\n    peopleIndices.push(scoreIndices[i].personIndex);\n  }\n  return peopleIndices;\n};\n\n// Scheduler moves =============================================================\n\nconst getBestPersonAdd = (schedule, person) => {\n\n  let bestScores = { overallScore: -1 };\n  let bestSchedule = null;\n\n  const daysOff = schedule.getDaysOff(person.id);\n  if (daysOff.length < person.allottedDaysOff) {\n    for (let i = 0; i < schedule.staffBreaks.length; i++) {\n      const day = schedule.staffBreaks[i];\n      if (\n        !daysOff.includes(day.date) &&\n        person.startDate <= day.date &&\n        person.endDate >= day.date\n      ) {\n        const possibleSchedule = schedule.clone();\n        possibleSchedule.addDayOff(person.id, day.date);\n        const scores = scoreSchedule(possibleSchedule);\n        if (scores.overallScore > bestScores.overallScore) {\n          bestScores = scores;\n          bestSchedule = possibleSchedule;\n        }\n      }\n    }\n  }\n\n  return {\n    scores: bestScores,\n    schedule: bestSchedule,\n  };\n};\n\nconst getBestPersonMove = (schedule, person) => {\n\n  let bestScores = { overallScore: -1 };\n  let bestSchedule = null;\n\n  const daysOff = schedule.getDaysOff(person.id);\n  for (let i = 0; i < daysOff.length; i++) {\n    const oldDate = daysOff[i];\n    for (let j = 0; j < schedule.staffBreaks.length; j++) {\n      const newDate = schedule.staffBreaks[j].date;\n      if (\n        oldDate !== newDate && \n        !daysOff.includes(newDate) &&\n        newDate >= person.startDate &&\n        newDate <= person.endDate\n      ) {\n        const possibleSchedule = schedule.clone();\n        possibleSchedule.moveDayOff(person.id, oldDate, newDate);\n        const scores = scoreSchedule(possibleSchedule);\n        if (scores.overallScore > bestScores.overallScore) {\n          bestScores = scores;\n          bestSchedule = possibleSchedule;\n        }\n      }\n    }\n  }\n\n  return {\n    scores: bestScores,\n    schedule: bestSchedule,\n  };\n};\n\nconst getBestPersonTwoSwap = (schedule, person) => {\n\n  let bestScores = { overallScore: -1 };\n  let bestSchedule = null;\n\n  const daysOff = schedule.getDaysOff(person.id);\n  for (let i = 0; i < daysOff.length; i++) {\n    const personDate = daysOff[i];\n    for (let j = 0; j < schedule.staff.length; j++) {\n      const otherPerson = schedule.staff[j];\n      if (person.id !== otherPerson.id) {\n        const otherDaysOff = schedule.getDaysOff(otherPerson.id);\n        for (let k = 0; k < otherDaysOff.length; k++) {\n          const otherPersonDate = otherDaysOff[k];\n          if (\n            personDate !== otherPersonDate &&\n            !daysOff.includes(otherPersonDate) &&\n            !otherDaysOff.includes(personDate) &&\n            otherPersonDate >= person.startDate &&\n            otherPersonDate <= person.endDate &&\n            personDate >= otherPerson.startDate &&\n            personDate <= otherPerson.endDate\n          ) {\n            const possibleSchedule = schedule.clone();\n            possibleSchedule.moveDayOff(person.id, personDate, otherPersonDate);\n            possibleSchedule.moveDayOff(otherPerson.id, otherPersonDate, personDate);\n            const scores = scoreSchedule(possibleSchedule);\n            if (scores.overallScore > bestScores.overallScore) {\n              bestScores = scores;\n              bestSchedule = possibleSchedule;\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    scores: bestScores,\n    schedule: bestSchedule,\n  };\n};\n\nconst getBestPersonDaySwap = (schedule, person) => {\n\n  let bestScores = { overallScore: -1 };\n  let bestSchedule = null;\n\n  const daysOff = schedule.getDaysOff(person.id);\n  for (let i = 0; i < daysOff.length; i++) {\n    const date = daysOff[i];\n    const day1 = schedule.getDay(date);\n    for (let j = 0; j < schedule.staffBreaks.length; j++) {\n      const day2 = schedule.staffBreaks[j];\n      if (\n        day1.date !== day2.date &&\n        isDateValidDayOffForAllStaff(day1.date, day2.staffOnBreak, schedule) &&\n        isDateValidDayOffForAllStaff(day2.date, day1.staffOnBreak, schedule)\n      ) {\n        const possibleSchedule = schedule.clone();\n        for (let k = 0; k < day1.staffOnBreak.length; k++) {\n          const personId = day1.staffOnBreak[k];\n          possibleSchedule.moveDayOff(personId, day1.date, day2.date);\n        }\n        for (let k = 0; k < day2.staffOnBreak.length; k++) {\n          const personId = day2.staffOnBreak[k];\n          possibleSchedule.moveDayOff(personId, day2.date, day1.date);\n        }\n        const scores = scoreSchedule(possibleSchedule);\n        if (scores.overallScore > bestScores.overallScore) {\n          bestScores = scores;\n          bestSchedule = possibleSchedule;\n        }\n      }\n    }\n  }\n\n  return {\n    scores: bestScores,\n    schedule: bestSchedule,\n  };\n};\n\n// Helpers =====================================================================\n\nconst isDateValidDayOffForAllStaff = (date, staffIds, schedule) => {\n  for (let i = 0; i < staffIds.length; i++) {\n    const person = schedule.getPerson(staffIds[i]);\n    if (person.startDate > date || person.endDate < date) {\n      return false;\n    }\n  }\n  return true;\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = function() {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [10], function() { return __webpack_require__(289); })\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"90da5863\" + \".chunk.js\";\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/scheduler-demo/\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t289: 1\n};\n\n// importScripts chunk loading\nvar installChunk = function(data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = function(chunkId, promises) {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkcamp_react\"] = self[\"webpackChunkcamp_react\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = function() {\n\treturn __webpack_require__.e(10).then(next);\n};","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["WORKER_MESSAGE_TYPES","THIS_YEAR","moment","format","dateDiffCache","getDateDiff","endDate","startDate","key","diff","getNumDaysInCommon","days","otherDaysArray","otherDaysIndices","i","length","push","daysInCommon","day","j","otherDays","otherDay","Schedule","lastMoveDescription","jobs","staff","staffBreaks","settings","dateToIndexMap","jobIdMap","personIdMap","personToDaysOffMap","numQualifiedOnDutyMap","this","range","current","end","add","createDateRange","map","date","staffOnBreak","forEach","index","job","id","dateRequirements","person","jobId","Object","keys","schedule","_","personId","sort","dayIndex","getPerson","x","oldDate","newDate","name","removeDayOff","addDayOff","scorePersonClumpiness","idealDaySpacing","numDaysWorking","allottedDaysOff","score","dayBeforeFirstDay","getDaysOff","dayAfterLastDay","Math","pow","sqrt","scorePersonRequestedDaysOff","requestedDaysOff","daysOff","scorePersonFriends","friends","maxDaysOffInCommon","friend","min","getNumDaysOffInCommon","scorePersonBestFriend","bestFriend","scorePersonEnemy","enemy","peopleIds","personDaysOff","peopleDaysOff","numInvocations","getNumScoreInvocations","scoreSchedule","campScoreWeight","peopleScoreWeight","fairnessWeight","avgHappinessWeight","peopleScores","peopleClumpinessWeight","peopleFriendsWeight","peopleBestFriendWeight","peopleRequestedDaysOffWeight","peopleEnemyWeight","scores","divisor","scorePeople","avgPeopleScore","reduce","sum","peopleScore","campScore","numQualifiedOnDutyStaff","getNumQualifiedOnDutyStaff","numStaff","scoreCamp","overallScore","self","onmessage","message","data","result","makeSchedule","postMessage","type","payload","sendNumCalculationsUpdate","numCalculations","initEmptySchedule","populateSchedule","optimizeSchedule","targetDaysOff","actualDaysOff","peopleIndices","getPeopleSortedByScore","personIndex","bestAdd","getBestPersonAdd","getBetterSchedule","isBetter","newSchedule","newScores","moveTypes","getBestPersonMove","getBestPersonTwoSwap","getBestPersonDaySwap","bestMove","getBestMove","scoreIndices","item","bestScores","bestSchedule","includes","possibleSchedule","clone","moveDayOff","personDate","otherPerson","otherDaysOff","k","otherPersonDate","day1","getDay","day2","isDateValidDayOffForAllStaff","staffIds","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","__webpack_exports__","O","deferred","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","every","splice","r","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","f","e","chunkId","Promise","all","promises","u","miniCssF","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","nmd","paths","children","p","installedChunks","importScripts","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime","pop","next","then"],"sourceRoot":""}